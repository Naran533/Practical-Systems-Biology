import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

## Simulate the switch for Haematopoietic stem cells (HSCs) differentiation in either erythroid lineage or myeloid lineage
# Expression of GATA-1p is a signal for HSCs to enter erythroid lineage
# Expression of PU.1p let HSCs entering myeloid lineage
# GATA-1p and PU.1p can repress each other and are both auto-regulatory

def pg_switch(y, t, A, B, C):
    # Define value of the reaction coefficients
    a1 = 1.0
    a2 = 0.25
    b1 = 1.0
    b2 = 0.25
    b3 = 1.0
    c1 = 0.01
    c2 = 0.01
    c3 = 0.01
    d1 = 1.0
    d2 = 0.25
    e1 = 1.0
    e2 = 0.25
    e3 = 1.0
    e4 = 0.13
    f1 = 0.01
    g1 = 0.01
    g2 = 10.0

    g = y[0]
    p = y[1]
    x = y[2]
    dydt = np.empty(len(y))
    # For simplicity, hypercitically model that GATA-1p/PU.1p heterodimer repress both GATA-1p and PU.1p by binding to the two proteins
    # Dynamical equations of GATA-1p, PU.1p, and a deducted regulator X that is recruited by GATA-1p and repress PU.1p
    dydt[0] = (a1*A + a2*g) / (1 + b1*A + b2*g + b3*g*p) - c1*g
    dydt[1] = (d1*B + d2*p) / (1 + e1*B + e2*p + e3*g*p + e4*g*x) - c2*p
    dydt[2] = f1*g / (1 + g1*g + g2*C) - c3*x
    # a1, b1, d1, e1: parameter of external environment
    # g2: parameter of external repression
    # a2, b2, d2, e2: parameter of auto-regulartory
    # b3, e3: interaction between GATA-1p and PU.1p
    # f1, g1: interaction between GATA-1p and X
    # e4: interaction between GATA-1p and the inhibition of X
    # c1, c2, c3: protein degradation

    return dydt

# Simulate a situation of environmental signal A, which stimulate GATA-1p
g_up = []
g_down = []
p_up = []
p_down = []
x_up = []
x_down = []

B, C = (0.5, 0)
A_increasing = np.linspace(0, 3, 100)
A_decreasing = np.linspace(3, 0, 100)
y0 = [0, 10, 0]
t = np.arange(0, 1000, 0.05)

for A in A_increasing:
    y = odeint( pg_switch, y0, t, args = (A, B, C) )
    y0 = y[-1, :]
    g_up.append( y[-1, 0] )
    p_up.append( y[-1, 1] )
    x_up.append( y[-1, 2] )

for A in A_decreasing:
    y = odeint( pg_switch, y0, t, args = (A, B, C) )
    y0 = y[-1, :]
    g_down.append( y[-1, 0] )
    p_down.append( y[-1, 1] )
    x_down.append( y[-1, 2] )

plt.figure( figsize = (9, 3) )
plt.subplot(131)
plt.plot( A_increasing, g_up, 'o:', color = 'b' )
plt.plot( A_decreasing, g_down, 'o:' )
plt.title( 'GATA-1' )

plt.ylabel( 'Concentration' )
plt.xlabel( 'External Signal A' )

plt.subplot(132)
plt.plot( A_increasing, p_up, 'o:', color = 'b' )
plt.plot( A_decreasing, p_down, 'o:' )
plt.ylim(0, 10)
plt.title( 'PU.1p' )

plt.subplot(133)
plt.plot( A_increasing, x_up, 'o:', color = 'b' )
plt.plot( A_decreasing, x_down, 'o:' )
plt.title( 'X' )

plt.show()
